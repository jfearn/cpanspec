#!/usr/bin/env perl

=head1 NAME

cs-docker

=head1 VERSION

This document describes version 0.1

=head1 SYNOPSIS

cs-docker <options>

  --help|h	  Display help text
  --man		  Display man page
  --image         The Docker image to use. MANDATORY
  --build         Build the Docker image.
  --module=s      The CPAN module to package.
  --file=s        The tar file to Package. (Either build, module or file must be set).
  --work_dir=s    Override the default working directory Defaults to: '$HOME/cpanspec'.
  --create_dir    Create the working directory if it doesn't exist.
  --docker_dir=s  The directory to look for dockerfiles and sources. Defaults to: '/usr/share/cpanspec/Dockerfiles'.

=head1 DESCRIPTION

Convenience wrapper for using cpanspec in Docker!

=cut

use warnings;
use strict;
use Getopt::Long;
use Pod::Usage;
use Carp;
use File::Path qw(make_path);
use File::Basename;

my $man        = 0;
my $help       = 0;
my $module     = undef;
my $file       = undef;
my $image      = undef;
my $create_dir = undef;
my $work_dir   = $ENV{"HOME"} . '/cpanspec';
my $docker_dir = '/usr/share/cpanspec/Dockerfiles';
my $build      = undef;

GetOptions(
    'help|h'       => \$help,
    'man'          => \$man,
    'create_dir'   => \$create_dir,
    'build'        => \$build,
    'module=s'     => \$module,
    'file=s'       => \$file,
    'image=s'      => \$image,
    'work_dir=s'   => \$work_dir,
    'docker_dir=s' => \$docker_dir,
) || pod2usage(-verbose => 0);

pod2usage(-verbose => 1) if ($help);
pod2usage(-verbose => 2) if ($man);
pod2usage(-verbose => 1) unless ($image && ($build || ($module || $file)));

if ($build) {
    build();
}
else {
    run();
}

exit;

sub build {
    system(qq{docker build --rm=true -t cpanspec-$image --file=$docker_dir/$image $docker_dir});

    return;
}

sub run {

    my $name      = $module;
    my $target    = $module;
    my $file_name = undef;

    if ($file) {
        $file_name = fileparse($file);
        $name      = $file_name;
        $target    = "/home/cpanspec/work_dir/$file_name";
    }

    if ($name =~ /::/) {
        $name =~ s/::/-/g;
        $name = "perl-$name";
    }

    if ($create_dir) {
        unless (-d "$work_dir") {
            make_path("$work_dir");
            system(qq{sudo chcon -R -t svirt_sandbox_file_t $work_dir});
        }
    }

    croak(qq{Working dir "$work_dir" does not exist!}) unless (-d "$work_dir");

    $work_dir = "$work_dir/$image/$name";
    make_path("$work_dir") unless (-d "$work_dir");

    croak("The working directory '$work_dir' does not exist!") unless (-d "$work_dir");

    if (-f "cpanspec") {
        system(qq{cp -f cpanspec $work_dir/.});
    }
    else {
        system(qq{cp -f /usr/bin/cpanspec $work_dir/.});
    }

    if ($file) {
        system(qq{cp -f $file $work_dir/.});
    }

    my $cmd
        = qq{docker run --user=cpanspec --rm -i -t -v $work_dir:/home/cpanspec/work_dir --workdir /home/cpanspec/work_dir cpanspec-$image  /home/cpanspec/work_dir/cpanspec --verbose --force --build --follow --packager '$ENV{"USER"}' $target};
    print("running: $cmd\n");
    system($cmd);

    return;

}

